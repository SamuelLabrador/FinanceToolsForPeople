/**
 * FTFP API
 * Finance tools for people
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ModelsTickerHistory model module.
 * @module model/ModelsTickerHistory
 * @version 0.0.1
 */
class ModelsTickerHistory {
    /**
     * Constructs a new <code>ModelsTickerHistory</code>.
     * @alias module:model/ModelsTickerHistory
     * @param symbol {String} 
     * @param close {Array.<Number>} 
     * @param high {Array.<Number>} 
     * @param low {Array.<Number>} 
     * @param open {Array.<Number>} 
     * @param volume {Array.<Number>} 
     * @param timestamp {Array.<Number>} 
     */
    constructor(symbol, close, high, low, open, volume, timestamp) { 
        
        ModelsTickerHistory.initialize(this, symbol, close, high, low, open, volume, timestamp);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, symbol, close, high, low, open, volume, timestamp) { 
        obj['symbol'] = symbol;
        obj['close'] = close;
        obj['high'] = high;
        obj['low'] = low;
        obj['open'] = open;
        obj['volume'] = volume;
        obj['timestamp'] = timestamp;
    }

    /**
     * Constructs a <code>ModelsTickerHistory</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ModelsTickerHistory} obj Optional instance to populate.
     * @return {module:model/ModelsTickerHistory} The populated <code>ModelsTickerHistory</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ModelsTickerHistory();

            if (data.hasOwnProperty('symbol')) {
                obj['symbol'] = ApiClient.convertToType(data['symbol'], 'String');
            }
            if (data.hasOwnProperty('close')) {
                obj['close'] = ApiClient.convertToType(data['close'], ['Number']);
            }
            if (data.hasOwnProperty('high')) {
                obj['high'] = ApiClient.convertToType(data['high'], ['Number']);
            }
            if (data.hasOwnProperty('low')) {
                obj['low'] = ApiClient.convertToType(data['low'], ['Number']);
            }
            if (data.hasOwnProperty('open')) {
                obj['open'] = ApiClient.convertToType(data['open'], ['Number']);
            }
            if (data.hasOwnProperty('volume')) {
                obj['volume'] = ApiClient.convertToType(data['volume'], ['Number']);
            }
            if (data.hasOwnProperty('timestamp')) {
                obj['timestamp'] = ApiClient.convertToType(data['timestamp'], ['Number']);
            }
        }
        return obj;
    }


}

/**
 * @member {String} symbol
 */
ModelsTickerHistory.prototype['symbol'] = undefined;

/**
 * @member {Array.<Number>} close
 */
ModelsTickerHistory.prototype['close'] = undefined;

/**
 * @member {Array.<Number>} high
 */
ModelsTickerHistory.prototype['high'] = undefined;

/**
 * @member {Array.<Number>} low
 */
ModelsTickerHistory.prototype['low'] = undefined;

/**
 * @member {Array.<Number>} open
 */
ModelsTickerHistory.prototype['open'] = undefined;

/**
 * @member {Array.<Number>} volume
 */
ModelsTickerHistory.prototype['volume'] = undefined;

/**
 * @member {Array.<Number>} timestamp
 */
ModelsTickerHistory.prototype['timestamp'] = undefined;






export default ModelsTickerHistory;

